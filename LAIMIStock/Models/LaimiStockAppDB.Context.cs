//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LAIMIStock.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class laimistockappEntities : DbContext
    {
        public laimistockappEntities()
            : base("name=laimistockappEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Activos> Activos { get; set; }
        public virtual DbSet<Bitacora> Bitacora { get; set; }
        public virtual DbSet<CategoriasActivos> CategoriasActivos { get; set; }
        public virtual DbSet<CategoriasSuministros> CategoriasSuministros { get; set; }
        public virtual DbSet<Roles> Roles { get; set; }
        public virtual DbSet<Suministros> Suministros { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<TiposAccion> TiposAccion { get; set; }
        public virtual DbSet<Usuarios> Usuarios { get; set; }
    
        public virtual int insertActivos(string pCodigo, string pNombre, string pDesc, Nullable<decimal> pPrecio, Nullable<System.DateTime> pFechaIng, Nullable<System.DateTime> pFechaExp, string pLocalizacion, Nullable<int> pEstado)
        {
            var pCodigoParameter = pCodigo != null ?
                new ObjectParameter("pCodigo", pCodigo) :
                new ObjectParameter("pCodigo", typeof(string));
    
            var pNombreParameter = pNombre != null ?
                new ObjectParameter("pNombre", pNombre) :
                new ObjectParameter("pNombre", typeof(string));
    
            var pDescParameter = pDesc != null ?
                new ObjectParameter("pDesc", pDesc) :
                new ObjectParameter("pDesc", typeof(string));
    
            var pPrecioParameter = pPrecio.HasValue ?
                new ObjectParameter("pPrecio", pPrecio) :
                new ObjectParameter("pPrecio", typeof(decimal));
    
            var pFechaIngParameter = pFechaIng.HasValue ?
                new ObjectParameter("pFechaIng", pFechaIng) :
                new ObjectParameter("pFechaIng", typeof(System.DateTime));
    
            var pFechaExpParameter = pFechaExp.HasValue ?
                new ObjectParameter("pFechaExp", pFechaExp) :
                new ObjectParameter("pFechaExp", typeof(System.DateTime));
    
            var pLocalizacionParameter = pLocalizacion != null ?
                new ObjectParameter("pLocalizacion", pLocalizacion) :
                new ObjectParameter("pLocalizacion", typeof(string));
    
            var pEstadoParameter = pEstado.HasValue ?
                new ObjectParameter("pEstado", pEstado) :
                new ObjectParameter("pEstado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertActivos", pCodigoParameter, pNombreParameter, pDescParameter, pPrecioParameter, pFechaIngParameter, pFechaExpParameter, pLocalizacionParameter, pEstadoParameter);
        }
    
        public virtual int insertBitacora(string pNombre, string pDesc, Nullable<System.DateTime> pFecha, string pNombreU, string pNombreTA)
        {
            var pNombreParameter = pNombre != null ?
                new ObjectParameter("pNombre", pNombre) :
                new ObjectParameter("pNombre", typeof(string));
    
            var pDescParameter = pDesc != null ?
                new ObjectParameter("pDesc", pDesc) :
                new ObjectParameter("pDesc", typeof(string));
    
            var pFechaParameter = pFecha.HasValue ?
                new ObjectParameter("pFecha", pFecha) :
                new ObjectParameter("pFecha", typeof(System.DateTime));
    
            var pNombreUParameter = pNombreU != null ?
                new ObjectParameter("pNombreU", pNombreU) :
                new ObjectParameter("pNombreU", typeof(string));
    
            var pNombreTAParameter = pNombreTA != null ?
                new ObjectParameter("pNombreTA", pNombreTA) :
                new ObjectParameter("pNombreTA", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertBitacora", pNombreParameter, pDescParameter, pFechaParameter, pNombreUParameter, pNombreTAParameter);
        }
    
        public virtual int insertCategorias(string pNombre, string pDesc, string pImagenURL)
        {
            var pNombreParameter = pNombre != null ?
                new ObjectParameter("pNombre", pNombre) :
                new ObjectParameter("pNombre", typeof(string));
    
            var pDescParameter = pDesc != null ?
                new ObjectParameter("pDesc", pDesc) :
                new ObjectParameter("pDesc", typeof(string));
    
            var pImagenURLParameter = pImagenURL != null ?
                new ObjectParameter("pImagenURL", pImagenURL) :
                new ObjectParameter("pImagenURL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertCategorias", pNombreParameter, pDescParameter, pImagenURLParameter);
        }
    
        public virtual int insertRol(string pNombre, string pDesc)
        {
            var pNombreParameter = pNombre != null ?
                new ObjectParameter("pNombre", pNombre) :
                new ObjectParameter("pNombre", typeof(string));
    
            var pDescParameter = pDesc != null ?
                new ObjectParameter("pDesc", pDesc) :
                new ObjectParameter("pDesc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertRol", pNombreParameter, pDescParameter);
        }
    
        public virtual int insertSuministros(string pCodigo, string pDesc, Nullable<System.DateTime> pFechaIng, Nullable<System.DateTime> pFechaCaduc, Nullable<decimal> pPrecio, Nullable<int> pObjGasto, string pLocalizacion, Nullable<int> pCant)
        {
            var pCodigoParameter = pCodigo != null ?
                new ObjectParameter("pCodigo", pCodigo) :
                new ObjectParameter("pCodigo", typeof(string));
    
            var pDescParameter = pDesc != null ?
                new ObjectParameter("pDesc", pDesc) :
                new ObjectParameter("pDesc", typeof(string));
    
            var pFechaIngParameter = pFechaIng.HasValue ?
                new ObjectParameter("pFechaIng", pFechaIng) :
                new ObjectParameter("pFechaIng", typeof(System.DateTime));
    
            var pFechaCaducParameter = pFechaCaduc.HasValue ?
                new ObjectParameter("pFechaCaduc", pFechaCaduc) :
                new ObjectParameter("pFechaCaduc", typeof(System.DateTime));
    
            var pPrecioParameter = pPrecio.HasValue ?
                new ObjectParameter("pPrecio", pPrecio) :
                new ObjectParameter("pPrecio", typeof(decimal));
    
            var pObjGastoParameter = pObjGasto.HasValue ?
                new ObjectParameter("pObjGasto", pObjGasto) :
                new ObjectParameter("pObjGasto", typeof(int));
    
            var pLocalizacionParameter = pLocalizacion != null ?
                new ObjectParameter("pLocalizacion", pLocalizacion) :
                new ObjectParameter("pLocalizacion", typeof(string));
    
            var pCantParameter = pCant.HasValue ?
                new ObjectParameter("pCant", pCant) :
                new ObjectParameter("pCant", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertSuministros", pCodigoParameter, pDescParameter, pFechaIngParameter, pFechaCaducParameter, pPrecioParameter, pObjGastoParameter, pLocalizacionParameter, pCantParameter);
        }
    
        public virtual int insertTiposAccion(string pNombre, string pDesc)
        {
            var pNombreParameter = pNombre != null ?
                new ObjectParameter("pNombre", pNombre) :
                new ObjectParameter("pNombre", typeof(string));
    
            var pDescParameter = pDesc != null ?
                new ObjectParameter("pDesc", pDesc) :
                new ObjectParameter("pDesc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertTiposAccion", pNombreParameter, pDescParameter);
        }
    
        public virtual int insertUsuario(string pNombre, string pPassword, string pNombreRol)
        {
            var pNombreParameter = pNombre != null ?
                new ObjectParameter("pNombre", pNombre) :
                new ObjectParameter("pNombre", typeof(string));
    
            var pPasswordParameter = pPassword != null ?
                new ObjectParameter("pPassword", pPassword) :
                new ObjectParameter("pPassword", typeof(string));
    
            var pNombreRolParameter = pNombreRol != null ?
                new ObjectParameter("pNombreRol", pNombreRol) :
                new ObjectParameter("pNombreRol", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertUsuario", pNombreParameter, pPasswordParameter, pNombreRolParameter);
        }
    
        public virtual ObjectResult<selectActivos_Result> selectActivos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<selectActivos_Result>("selectActivos");
        }
    
        public virtual ObjectResult<selectBitacora_Result> selectBitacora()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<selectBitacora_Result>("selectBitacora");
        }
    
        public virtual int selectCategorias()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("selectCategorias");
        }
    
        public virtual ObjectResult<selectRoles_Result> selectRoles()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<selectRoles_Result>("selectRoles");
        }
    
        public virtual ObjectResult<selectSuministros_Result> selectSuministros()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<selectSuministros_Result>("selectSuministros");
        }
    
        public virtual ObjectResult<selectTiposAccion_Result> selectTiposAccion()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<selectTiposAccion_Result>("selectTiposAccion");
        }
    
        public virtual ObjectResult<selectUsuarios_Result> selectUsuarios()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<selectUsuarios_Result>("selectUsuarios");
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    }
}
